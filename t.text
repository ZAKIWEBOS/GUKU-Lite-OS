<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>صفحة محمية</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            margin: 0;
            padding: 20px;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-direction: column;
            user-select: none;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
        }

        .container {
            text-align: center;
            background: rgba(255, 255, 255, 0.1);
            padding: 40px;
            border-radius: 20px;
            backdrop-filter: blur(10px);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            max-width: 90%;
        }

        h1 {
            font-size: 2.5em;
            margin-bottom: 20px;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        }

        p {
            font-size: 1.2em;
            line-height: 1.6;
            margin-bottom: 15px;
        }

        .warning {
            color: #ff6b6b;
            font-weight: bold;
            font-size: 1.1em;
            margin-top: 20px;
            padding: 15px;
            background: rgba(255, 107, 107, 0.2);
            border-radius: 10px;
            border: 2px solid #ff6b6b;
        }

        .device-info {
            background: rgba(255, 255, 255, 0.1);
            padding: 15px;
            border-radius: 10px;
            margin-top: 20px;
            font-size: 0.9em;
        }

        .security-breach {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255, 0, 0, 0.9);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 99999;
            flex-direction: column;
            font-size: 2em;
            font-weight: bold;
            text-align: center;
            animation: pulse 1s infinite;
        }

        @keyframes pulse {
            0% { opacity: 0.8; }
            50% { opacity: 1; }
            100% { opacity: 0.8; }
        }

        ::selection {
            background: transparent;
        }

        ::-moz-selection {
            background: transparent;
        }

        @media (max-width: 768px) {
            .container {
                padding: 20px;
            }
            h1 {
                font-size: 2em;
            }
            p {
                font-size: 1em;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>🔒 صفحة محمية</h1>
        <p>هذه صفحة تجريبية محمية من أدوات المطورين</p>
        <p>تم تطبيق جميع إجراءات الحماية المطلوبة</p>
        <div class="warning">
            تحذير: محاولة الوصول لأدوات المطورين محظورة!
        </div>
        <div class="device-info" id="deviceInfo">
            <div>نوع الجهاز: <span id="deviceType"></span></div>
            <div>حالة الحماية: <span style="color: #4CAF50;">نشطة ✓</span></div>
        </div>
    </div>

    <script>
        // متغيرات الحماية والتتبع
        let hackAttempts = 0;
        let initialDeviceType = null;
        let deviceCheckInterval = null;
        let isSecurityBreach = false;

        // دالة كشف نوع الجهاز
        function detectDeviceType() {
            const userAgent = navigator.userAgent.toLowerCase();
            const isMobile = /mobile|android|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(userAgent);
            const isTablet = /tablet|ipad/i.test(userAgent);
            const hasTouch = 'ontouchstart' in window || navigator.maxTouchPoints > 0;
            const screenWidth = window.screen.width;
            const screenHeight = window.screen.height;
            
            // تحليل شامل لنوع الجهاز
            let deviceType = 'desktop';
            
            if (isMobile && !isTablet) {
                deviceType = 'mobile';
            } else if (isTablet) {
                deviceType = 'tablet';
            } else if (hasTouch && (screenWidth <= 1024 || screenHeight <= 768)) {
                deviceType = 'tablet';
            } else if (screenWidth <= 768) {
                deviceType = 'mobile';
            }

            return {
                type: deviceType,
                isMobile: isMobile,
                isTablet: isTablet,
                hasTouch: hasTouch,
                screenWidth: screenWidth,
                screenHeight: screenHeight,
                userAgent: navigator.userAgent,
                platform: navigator.platform
            };
        }

        // دالة إظهار خرق الأمان
        function showSecurityBreach(reason) {
            if (isSecurityBreach) return;
            
            isSecurityBreach = true;
            
            const breachDiv = document.createElement('div');
            breachDiv.className = 'security-breach';
            breachDiv.innerHTML = `
                <div>🚨 خرق أمني مكتشف! 🚨</div>
                <div style="font-size: 0.7em; margin-top: 20px;">${reason}</div>
                <div style="font-size: 0.5em; margin-top: 20px;">سيتم إغلاق الصفحة خلال 5 ثوان...</div>
            `;
            
            document.body.appendChild(breachDiv);
            
            // إغلاق الصفحة بعد 5 ثوان
            setTimeout(() => {
                window.location.href = 'about:blank';
            }, 5000);
        }

        // دالة فحص تغيير نوع الجهاز
        function checkDeviceChange() {
            const currentDevice = detectDeviceType();
            
            if (initialDeviceType === null) {
                initialDeviceType = currentDevice;
                updateDeviceInfo(currentDevice);
                return;
            }

            // فحص تغيير نوع الجهاز الأساسي
            if (currentDevice.type !== initialDeviceType.type) {
                showSecurityBreach(`تم كشف تغيير نوع الجهاز من ${getDeviceNameAr(initialDeviceType.type)} إلى ${getDeviceNameAr(currentDevice.type)}`);
                return;
            }

            // فحص تغيير خصائص الشاشة بشكل جذري
            const widthDiff = Math.abs(currentDevice.screenWidth - initialDeviceType.screenWidth);
            const heightDiff = Math.abs(currentDevice.screenHeight - initialDeviceType.screenHeight);
            
            if (widthDiff > 100 || heightDiff > 100) {
                showSecurityBreach(`تم كشف تغيير جذري في أبعاد الشاشة`);
                return;
            }

            // فحص تغيير حالة اللمس
            if (currentDevice.hasTouch !== initialDeviceType.hasTouch) {
                showSecurityBreach(`تم كشف تغيير في حالة دعم اللمس`);
                return;
            }

            // فحص تغيير User Agent
            if (currentDevice.userAgent !== initialDeviceType.userAgent) {
                showSecurityBreach(`تم كشف تغيير في User Agent`);
                return;
            }

            // فحص تغيير Platform
            if (currentDevice.platform !== initialDeviceType.platform) {
                showSecurityBreach(`تم كشف تغيير في نوع النظام`);
                return;
            }
        }

        // دالة تحديث معلومات الجهاز
        function updateDeviceInfo(device) {
            const deviceTypeSpan = document.getElementById('deviceType');
            if (deviceTypeSpan) {
                deviceTypeSpan.textContent = getDeviceNameAr(device.type);
            }
        }

        // دالة الحصول على اسم الجهاز بالعربية
        function getDeviceNameAr(deviceType) {
            switch(deviceType) {
                case 'mobile': return 'هاتف محمول';
                case 'tablet': return 'جهاز لوحي';
                case 'desktop': return 'كمبيوتر مكتبي';
                default: return 'غير معروف';
            }
        }

        // بدء فحص نوع الجهاز
        function startDeviceMonitoring() {
            checkDeviceChange();
            deviceCheckInterval = setInterval(checkDeviceChange, 1000);
        }

        // جميع إجراءات الحماية السابقة
        document.addEventListener('keydown', function(e) {
            if (isSecurityBreach) return;
            
            // منع F12
            if (e.key === 'F12') {
                e.preventDefault();
                showWarning('F12 محظور!');
                return false;
            }
            
            // منع Ctrl+Shift+I (أدوات المطورين)
            if (e.ctrlKey && e.shiftKey && e.key === 'I') {
                e.preventDefault();
                showWarning('أدوات المطورين محظورة!');
                return false;
            }
            
            // منع Ctrl+Shift+J (Console)
            if (e.ctrlKey && e.shiftKey && e.key === 'J') {
                e.preventDefault();
                showWarning('Console محظور!');
                return false;
            }
            
            // منع Ctrl+U (عرض المصدر)
            if (e.ctrlKey && e.key === 'u') {
                e.preventDefault();
                showWarning('عرض المصدر محظور!');
                return false;
            }
            
            // منع Ctrl+S (حفظ الصفحة)
            if (e.ctrlKey && e.key === 's') {
                e.preventDefault();
                showWarning('حفظ الصفحة محظور!');
                return false;
            }
            
            // منع Ctrl+A (تحديد الكل)
            if (e.ctrlKey && e.key === 'a') {
                e.preventDefault();
                showWarning('تحديد الكل محظور!');
                return false;
            }
            
            // منع Ctrl+C (نسخ)
            if (e.ctrlKey && e.key === 'c') {
                e.preventDefault();
                showWarning('النسخ محظور!');
                return false;
            }
            
            // منع Ctrl+V (لصق)
            if (e.ctrlKey && e.key === 'v') {
                e.preventDefault();
                showWarning('اللصق محظور!');
                return false;
            }
            
            // منع Ctrl+X (قص)
            if (e.ctrlKey && e.key === 'x') {
                e.preventDefault();
                showWarning('القص محظور!');
                return false;
            }
            
            // منع Ctrl+P (طباعة)
            if (e.ctrlKey && e.key === 'p') {
                e.preventDefault();
                showWarning('الطباعة محظورة!');
                return false;
            }

            // منع جميع shortcuts مع Alt
            if (e.altKey) {
                e.preventDefault();
                showWarning('Alt shortcuts محظورة!');
                return false;
            }
            
            // منع Escape
            if (e.key === 'Escape') {
                e.preventDefault();
                showWarning('زر Escape محظور!');
                return false;
            }
        });

        // منع النقر الأيمن
        document.addEventListener('contextmenu', function(e) {
            if (isSecurityBreach) return;
            e.preventDefault();
            showWarning('النقر الأيمن محظور!');
            return false;
        });

        // منع السحب والإفلات
        document.addEventListener('dragstart', function(e) {
            if (isSecurityBreach) return;
            e.preventDefault();
            showWarning('السحب والإفلات محظور!');
            return false;
        });

        // منع التحديد بالماوس
        document.addEventListener('selectstart', function(e) {
            if (isSecurityBreach) return;
            e.preventDefault();
            showWarning('التحديد محظور!');
            return false;
        });

        // كشف أدوات المطورين بطرق مختلفة
        let devtools = {open: false, orientation: null};
        const threshold = 160;

        setInterval(function() {
            if (isSecurityBreach) return;
            
            if (window.outerHeight - window.innerHeight > threshold || 
                window.outerWidth - window.innerWidth > threshold) {
                if (!devtools.open) {
                    devtools.open = true;
                    showSecurityBreach('تم كشف أدوات المطورين مفتوحة!');
                }
            } else {
                devtools.open = false;
            }
        }, 500);

        // كشف Console
        let devtools2 = {open: false};

        function checkDevTools() {
            if (isSecurityBreach) return;
            
            const start = new Date();
            debugger;
            const end = new Date();
            if (end - start > 100) {
                if (!devtools2.open) {
                    devtools2.open = true;
                    showSecurityBreach('تم كشف Console مفتوح!');
                }
            } else {
                devtools2.open = false;
            }
        }

        setInterval(checkDevTools, 1000);

        // حماية من النسخ واللصق
        document.addEventListener('copy', function(e) {
            if (isSecurityBreach) return;
            e.preventDefault();
            showWarning('النسخ محظور!');
            return false;
        });

        document.addEventListener('paste', function(e) {
            if (isSecurityBreach) return;
            e.preventDefault();
            showWarning('اللصق محظور!');
            return false;
        });

        // منع الطباعة
        window.addEventListener('beforeprint', function(e) {
            if (isSecurityBreach) return;
            e.preventDefault();
            showWarning('الطباعة محظورة!');
            return false;
        });

        // منع النقر المزدوج للتحديد
        document.addEventListener('mousedown', function(e) {
            if (isSecurityBreach) return;
            if (e.detail > 1) {
                e.preventDefault();
                showWarning('التحديد محظور!');
                return false;
            }
        });

        // دالة إظهار التحذيرات
        function showWarning(message) {
            if (isSecurityBreach) return;
            
            hackAttempts++;
            
            const warning = document.createElement('div');
            warning.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                background: linear-gradient(45deg, #ff6b6b, #ff8e8e);
                color: white;
                padding: 15px 25px;
                border-radius: 10px;
                font-weight: bold;
                font-size: 16px;
                box-shadow: 0 4px 20px rgba(255, 107, 107, 0.4);
                z-index: 10000;
                animation: slideIn 0.3s ease-out;
                border: 2px solid #ff4757;
                text-align: center;
                min-width: 250px;
            `;
            
            warning.innerHTML = `
                <div>⚠️ ${message}</div>
                <div style="font-size: 12px; margin-top: 5px; opacity: 0.9;">
                    محاولة رقم: ${hackAttempts}
                </div>
            `;
            
            // إضافة CSS للحركة
            if (!document.getElementById('warningStyle')) {
                const style = document.createElement('style');
                style.id = 'warningStyle';
                style.textContent = `
                    @keyframes slideIn {
                        from {
                            transform: translateX(100%);
                            opacity: 0;
                        }
                        to {
                            transform: translateX(0);
                            opacity: 1;
                        }
                    }
                    @keyframes slideOut {
                        from {
                            transform: translateX(0);
                            opacity: 1;
                        }
                        to {
                            transform: translateX(100%);
                            opacity: 0;
                        }
                    }
                `;
                document.head.appendChild(style);
            }
            
            document.body.appendChild(warning);
            
            setTimeout(() => {
                warning.style.animation = 'slideOut 0.3s ease-in';
                setTimeout(() => {
                    if (warning.parentNode) {
                        warning.parentNode.removeChild(warning);
                    }
                }, 300);
            }, 3000);
            
            // إذا تجاوزت المحاولات 10، إظهار خرق أمني
            if (hackAttempts > 10) {
                showSecurityBreach('تم كشف محاولات اختراق متعددة!');
            }
        }

        // منع مغادرة الصفحة
        window.addEventListener('beforeunload', function(e) {
            if (isSecurityBreach) return;
            const confirmationMessage = 'هل أنت متأكد من مغادرة الصفحة؟';
            e.returnValue = confirmationMessage;
            return confirmationMessage;
        });

        // حماية Console
        (function() {
            let _log = console.log;
            console.log = function() {
                if (!isSecurityBreach) {
                    showWarning('استخدام Console محظور!');
                }
            };
            console.error = console.log;
            console.warn = console.log;
            console.info = console.log;
            console.clear = console.log;
            console.dir = console.log;
            console.trace = console.log;
        })();

        // حماية إضافية من التلاعب
        Object.defineProperty(document, 'getElementById', {
            value: function(id) {
                if (id === 'deviceInfo' || id === 'deviceType' || id === 'warningStyle') {
                    return document.querySelector('#' + id);
                }
                if (!isSecurityBreach) {
                    showWarning('محاولة وصول مشبوهة للعناصر!');
                }
                return null;
            },
            writable: false
        });

        // رسائل Console
        console.log('%cتوقف! 🛑', 'color: red; font-size: 50px; font-weight: bold;');
        console.log('%cهذه منطقة محظورة للمطورين!', 'color: red; font-size: 20px;');
        console.log('%cأي محاولة للوصول ستكون مراقبة', 'color: orange; font-size: 16px;');

        // بدء مراقبة الجهاز عند تحميل الصفحة
        window.addEventListener('load', function() {
            startDeviceMonitoring();
            console.log('🔒 جميع إجراءات الحماية نشطة');
            console.log('📱 مراقبة نوع الجهاز نشطة');
        });

        // مراقبة تغيير الاتجاه
        window.addEventListener('orientationchange', function() {
            setTimeout(checkDeviceChange, 500);
        });

        // مراقبة تغيير حجم النافذة
        window.addEventListener('resize', function() {
            setTimeout(checkDeviceChange, 500);
        });

        // فحص دوري شامل
        setInterval(function() {
            if (isSecurityBreach) return;
            
            // فحص إضافي للحماية
            if (typeof window.console !== 'undefined') {
                // فحص Console بصمت
            }
        }, 2000);

        // حماية من محاولات إيقاف المراقبة
        Object.defineProperty(window, 'clearInterval', {
            value: function(intervalId) {
                if (intervalId === deviceCheckInterval) {
                    showSecurityBreach('محاولة إيقاف مراقبة الجهاز!');
                    return;
                }
                return clearInterval.call(this, intervalId);
            },
            writable: false
        });
    </script>
</body>
</html>
